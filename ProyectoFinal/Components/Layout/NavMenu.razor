@using Microsoft.AspNetCore.Identity
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager

<div class="d-flex align-items-center justify-content-end">
    <AuthorizeView>
        <Authorized>
            <div class="d-flex align-items-center justify-content-center">
                <!-- Enlace a Home -->
                <NavLink class="menu custom-link" href="/">
                    <i class="bi bi-house-door me-1"></i> Home
                </NavLink>

                <!-- Enlace a Menú -->
                <NavLink class="menu custom-link" href="/PizzaYa/Menu">
                    <i class="bi bi-list-ul me-1"></i> Menu
                </NavLink>

                <!-- Opciones de administrador -->
                <AuthorizeView Roles="Admin">
                    <Authorized Context="Admin">
                        <!-- Inventario -->
                        <NavLink class="menu custom-link" href="/PizzaYa/Productos/Index">
                            <i class="bi bi-box-seam me-1"></i> Inventario
                        </NavLink>

                        <!-- Usuarios -->
                        <NavLink class="menu custom-link" href="/Usuarios">
                            <i class="bi bi-people me-1"></i> Usuarios
                        </NavLink>
                    </Authorized>
                </AuthorizeView>

                <!-- Ordenes -->
                <NavLink class="menu custom-link" href="/PizzaYa/Ordenes/Index">
                    <i class="bi bi-receipt me-1"></i> Ordenes
                </NavLink>

                <!-- Usuario -->
                <span class="btn btn-link text-black">
                    <i class="bi bi-person-circle me-1"></i> USUARIO: @nickName
                </span>

                <!-- Botón para salir -->
                <form action="Account/Logout" method="post" class="d-inline">
                    <div class="col text-end">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" />
                        <button type="submit" class="btn btn-outline-danger">
                            <i class="bi bi-box-arrow-right me-1"></i> Salir
                        </button>
                    </div>
                </form>
            </div>
        </Authorized>

        <!-- Opciones para usuarios no autenticados -->
        <NotAuthorized>
            <div class="d-flex align-items-center justify-content-center">
                <!-- Enlace a Home -->
                <NavLink class="menu custom-link" href="/">
                    <i class="bi bi-house-door me-1"></i> Home
                </NavLink>

                <!-- Enlace a Login -->
                <NavLink class="menu custom-link" href="Account/Login">
                    <i class="bi bi-box-arrow-in-right me-1"></i> Login
                </NavLink>

                <!-- Enlace a Registro -->
                <NavLink class="menu custom-link" href="Account/Register">
                    <i class="bi bi-pencil-square me-1"></i> Register
                </NavLink>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    private string? nickName;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            var appUser = await UserManager.GetUserAsync(user);
            if (appUser != null)
            {
                nickName = appUser.Nombre;
            }
        }
    }
}
